# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node

# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
 
name: Node.js CI
 
on:

  push:

    branches: [ "main" ]

  pull_request:

    branches: [ "main" ]
 
jobs:

  build-test:

    runs-on: ubuntu-latest
 
    strategy:

      matrix:

        node-version: [22.x]

        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:

    #checking out the repo

    - uses: actions/checkout@v4

      with:

        fetch-depth: 0
 
        #setting up node.js   

    - name: Use Node.js ${{ matrix.node-version }}

      uses: actions/setup-node@v4

      with:

        node-version: ${{ matrix.node-version }}

        cache: 'npm'
 
    - name: Installing dependencies

      run: npm ci

      # Build the project

    - name: Build

      run: npm run build --if-present


      # Run Snyk to check for vulnerabilities

    - name: Run Snyk

      uses: snyk/actions/node@master

      env:

        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      with:

        command: test

        args: --severity-threshold=high --sarif-file-output=snyk.sarif

      continue-on-error: true # Allow workflow to continue even if vulnerabilities are found


      # Run SonarQube scan

    - name: SonarQube Scan

      uses: SonarSource/sonarqube-scan-action@v4

      env:

       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

       SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      with:

       args: >

        -Dsonar.projectKey=nodeproject           

        -Dsonar.organization=classci          

        -Dsonar.sources=.                       

        -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info            

        -Dsonar.exclusions=node_modules/**,dist/**            

        -Dsonar.qualitygate.wait=true

      continue-on-error: true
 
